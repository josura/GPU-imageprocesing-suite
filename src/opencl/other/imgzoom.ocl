const sampler_t sampler =
	CLK_NORMALIZED_COORDS_FALSE |
	CLK_ADDRESS_MIRRORED_REPEAT |
	CLK_FILTER_LINEAR;

void kernel imgzoom(global uchar4 * restrict d_output,
	read_only image2d_t d_input)
{
	const int c = get_global_id(0);
	const int r = get_global_id(1);
	const int2 dim = get_image_dim(d_input);

	if (c < dim.x && r < dim.y) {
		float2 coords00 = (float2)(c+0.25f, r+0.25f);
		float2 coords01 = (float2)(c+0.75f, r+0.25f);
		float2 coords10 = (float2)(c+0.25f, r+0.75f);
		float2 coords11 = (float2)(c+0.75f, r+0.75f);

		const float4 px00 = read_imagef(d_input, sampler, coords00);
		const float4 px01 = read_imagef(d_input, sampler, coords01);
		const float4 px10 = read_imagef(d_input, sampler, coords10);
		const float4 px11 = read_imagef(d_input, sampler, coords11);

		d_output[(2*r+0)*2*dim.x+(2*c+0)] = convert_uchar4(px00*255);
		d_output[(2*r+0)*2*dim.x+(2*c+1)] = convert_uchar4(px01*255);
		d_output[(2*r+1)*2*dim.x+(2*c+0)] = convert_uchar4(px10*255);
		d_output[(2*r+1)*2*dim.x+(2*c+1)] = convert_uchar4(px11*255);
	}
}
